load ybuilder.core.base;
load ybuilder.core.build;
//load ybuilder.core.extensiontest;

//TODO: Remove

import java.lang.System;

config = baseConfig with {
    groupId ="org.ybuilder",
    artifactId = "ybuilder",
    version = ybuilderVersion,
    description = "A simple build tool for yeti",
};
config = createBaseConfig config [];
config = config with (registerBaseTargets config);


ybuilderSrcDir = "ybuilder/";

config.baseTargets.compileYeti.fn := do p:
    load ybuilder.core.projectbase;
    helpers.yeticTask 
        config.dir.targetClasses 
        "." 
        [Include "ybuilder/core/*.yeti"] 
        config.yeticSourceReaderCode
        (pathes.compile config) 
        p;
done;

_ = target config "custom" "ybuilderinit" 
    [Before config.livecycleTargets.initialize] do p:

    antTask "delete" ["dir":config.dir.src] [] p;
    antTask "delete" ["dir":config.dir.resources] [] p;
    
    
    antTask "copy" ["todir":config.dir.src ^ "ybuilder"] [
        el "fileset" ["dir":ybuilderSrcDir] [
            el "include" ["name":"core/*.java"] []]] p;

    antTask "copy" ["todir":config.dir.src ^ "ybuilder"] [
        el "fileset" ["dir":ybuilderSrcDir] [
            el "include" ["name":"core/*.yeti"] []]] p;

    antTask "copy" ["todir":config.dir.resources] [
        el "fileset" ["dir":ybuilderSrcDir ^ "resources", 
                      "defaultexcludes":"no"] 
                     []] p;
done;

_ = target config "custom" "copygit" 
        [Before config.baseTargets.copyResources] do p:
    antTask "copy" 
            ["todir":config.dir.targetClasses] 
               [el "fileset" 
                    ["dir":config.dir.resources, "defaultexcludes":"no"] 
                        []] p;
done;

// compileRes = 
    // target "compileRes" [Before livecycleTargets.testCompile] do p:
        // antTask "copy" ["todir": config.dir.target || "rscSources"]
                // [antFileset (config.dir.targetClasses~) [Include "**/*.yeti"]] p;
        // antTask "yetic" ["srcdir":(config.dir.target || "rscSources"), "destdir": config.dir.target||"tempClasses"] 
                // [el "classpath" [:] 
                    // [el "pathelement" ["path":"compilePath"] []]]
                // p
    // done;
    
jarFile = "ybuilder.jar";

    
_ = target config "custom" "jary" 
    [Depends config.livecycleTargets.preparePackage,
    ShortName()] 
    do p:
    jars = ["ant-1.8.2.jar",
            "ant-launcher-1.8.2.jar",
            "maven-ant-tasks-2.1.3.jar","yeti.jar"];
    
    antTask 
        "jar" 
        ["jarfile":jarFile,
         "basedir":config.dir.targetClasses, 
         "defaultexcludes":"no"] 
        ((map do j:	
                el "zipfileset" 
                   ["src": "\(config.dir.lib)\(j)",
                   "excludes":"MANIFEST.MF"] [] 
              done jars) 
         ++ [el "manifest" [:]
                [el "attribute" 
                    ["name":"Implementation-Vendor", 
                    "value":config.organization] 
                    [],
                el "attribute" 
                   ["name":"Implementation-Title", 
                    "value":"\(config.groupId)-\(config.artifactId)"] 
                   [],
                el "attribute" 
                   ["name":"Implementation-Version", "value":config.version] 
                   [],
                el "attribute" 
                   ["name":"Main-Class", 
                   "value":"ybuilder.core.main"] 
                   []]]) 
            p;
    helpers.mvnInstallOrDeploy config jarFile p;            
done;
            
/*
dependency "junit" "junit" "3.8.2" [TestScope()];
dependency "org.apache.commons" "commons-lang3" "3.0.1" [];
dependency "javax.servlet" "servlet-api" "2.4" [ProvidedScope()];
*/
//for ["new-project","compile-java-yeti"] (push extensionTestDirs); 

//runTarget retrieveDependencies;

(load ybuilder.core.run).run  config;
