/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

program ybuilder.core.main;

import java.lang:Thread,System;
import java.io:File;
import java.net:URLClassLoader;
import yeti.lang.compiler.yeti;

_ = System#setProperty("ybuilder.starttime", 
                        string System#currentTimeMillis());

load ybuilder.core.base;
build = load ybuilder.core.build;

file n = new File(n is string);
args = list _argv;

    
_withBuildClassLoader dirPrefix antFiles fn = 
   (load ybuilder.core.build;
    import org.apache.tools.ant.AntClassLoader;
    import org.apache.tools.ant.types: FileSet;
    oL = Thread#currentThread()#getContextClassLoader();
    
    flUrl = (classOf AntClassLoader)#getProtectionDomain()
                                    #getCodeSource()#getLocation();
        
        
    urls = antFiles
     |>map do n: (new File(dirPrefix ^ string n))#toURI()#toURL() done;

    ctxtLoader = if empty? urls then
            oL
        else
            import java.lang.ClassLoader;
            new URLClassLoader(array (flUrl::urls),
                               ClassLoader#getSystemClassLoader()#getParent()); 
        fi;
    Thread#currentThread()#setContextClassLoader(ctxtLoader);
    try
        fn ctxtLoader;
    finally 
        Thread#currentThread()#setContextClassLoader(oL);
    yrt);


    
if not (file "project.yeti")#exists() then
        createNewYetiProject config projectName (createProject ()); 
        retrieveBuildDependencies ();


    emptyHelp = target config "new" "help" 
            [Description "help shown when there is no project.yeti"] do p:
        println "ybuilder - version \(ybuilderVersion)\n";
        println ' 
    ybuilder is a simple build-enviroment for YETI the functional 
    programming-language for JVM.

    To use ybuilder create a new ybuilder project:
 
    1.) run "java -jar ybuilder.jar new projectName chrisichris/basic" 
        This will create a new directory "projectName" based on the
        github repository chrisichris/basic.ybtr
    2.) edit the "project.yeti" file in the new directory 
        as described in the comments
    3.) copy your ybuilder.jar to the new directy (if it is not present)
    4.) run "java -jar ybuilder.jar" again to get a detailed help message

    For detailed description google ybuilder yeti (there is no homepage yet)
    '
    done;

    config.defaultTarget := Some emptyHelp;

    run config;
else
    load ybuilder.core.build;
    project = createProject();
    //project file exists
    //so run it
    if not 
        (file build.buildDependenciesConfig.ybuilderLibsManaged)#exists() 
        then
        build.retrieveBuildDependencies ();
    fi;
    
    //check for project classes lib
    projectClassesDir = buildDependenciesConfig.ybuilderProjectClasses;
    projectClassFile = new File(file projectClassesDir, "project.class");
    
    if not projectClassFile#exists() 
        or projectClassFile#lastModified() 
            < (file "project.yeti")#lastModified() then
        //clean/create the target dir    
        antTask "delete" ["dir":projectClassesDir] [] project;
        antTask "mkdir" ["dir":projectClassesDir] [] project;
       
        println "--- compiling project.yeti ---------";
        //create classLoader with libs and compile project.yeti
        antFiles = listFiles "."
            [Include "\(buildDependenciesConfig.ybuilder)extlib/*.jar", 
             Include "\(buildDependenciesConfig.ybuilderLibsManaged)*.jar"];

        _withBuildClassLoader "" antFiles do ctxtLoader:
            m = ctxtLoader#loadClass("yeti.lang.compiler.yeti")
                        #getMethod("main",array [classOf java.lang.String[]]);
            pars = ["-d",projectClassesDir,"project.yeti"];
            _ = m#invoke((), (array [pars as ~String[]]) as ~String[][]);
        done;
    fi;
    
    //now we have the compiled project.class we run it now
    println "--- running project.yeti ----------";
    
    antFiles = listPath 
        [Location projectClassesDir,
         Fileset 
            [".": 
                [Include "\(buildDependenciesConfig.ybuilder)extlib/*.jar", 
                Include "\(buildDependenciesConfig.ybuilderLibsManaged)*.jar"]
            ]];
    
    _withBuildClassLoader "" antFiles do ctxtLoader:
        import java.lang.reflect:InvocationTargetException;
        m = ctxtLoader#loadClass("project")
                    #getMethod("main",array [classOf java.lang.String[]]);
        try
            m#invoke((),
                (array [(array args) as ~String[]]) as ~String[][]);
        catch InvocationTargetException ex:
            throw ex#getCause();
        yrt
    done;    
    
fi;

        
System#exit(0);
();



