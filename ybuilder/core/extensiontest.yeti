module ybuilder.core.extensiontest;

import java.util.Properties;
import java.io:FileInputStream, File;

load ybuilder.core.build;
load ybuilder.core.base;

extensionTestDir = path dir.main "etprojects/";
extensionTestTargetDir = path dir.target "etprojects/";


createExtensionTestDirs name project = (
    baseDir = path extensionTestDir name;
    createNewYetiProject baseDir project;
    antTask "copy" ["todir":baseDir~, "overwrite":"false"] 
        [el "javaresource" ["name":"ybuilder/core/targets.properties"][],
         el "javaresource" ["name":"ybuilder/core/testextension.yeti"][],
         el "mapper" ["type":"flatten"][]] 
        project;
        
);

createExtensionTestProject = 
    target "createExtensionTestProject" 
           [Description "creates a project for testing of an extension in [\(extensionTestDir~)]. The name of the project must be provided as a param"] do p:
        for p.args do n: 
            createExtensionTestDirs n p 
        done;
    done;

runExtensionTests project = (
    if (file (extensionTestDir~))#exists() then
        antTask "copy" ["todir":extensionTestTargetDir~] 
                [el "fileset" ["dir":extensionTestDir~] []] 
                project;

        projectDirs = 
            (fs = (file (extensionTestTargetDir~))#listFiles();
             if nullptr? fs then 
                [] 
             else 
                list (wrapArray fs) 
             fi);
                        
        for projectDirs do dir:
            argLines = 
               (fis = new FileInputStream(new File(dir,"targets.properties"));
                try 
                    props = new Properties();
                    props#load(fis);
                    fst = string props#get("targets");
                    if props#contains("targets1") then
                        [fst,(string props#get("targets1"))]
                    else
                        [fst]
                    fi
                finally
                    fis#close();
                yrt);
            println "-------------\nextension test [\(dir#getName())]";
            for argLines do args:
                println "target: \(args)";
                            
                antTask "java" 
                        ["jar":"ybuilder.jar", "fork":"true", 
                         "dir":dir#getAbsolutePath()] 
                        [el "arg" ["line":args] []] 
                        project;
            done;
        done;
    fi;    
);

extensionTests = 
    target "extensionTests" [InLivecycle livecycleTargets.test] runExtensionTests;

push targetsInHelp createExtensionTestProject;   

{
    init () = ();
    extensionTests, 
    runExtensionTests, 
    extensionTestDir,
    createExtensionTestProject, 
    createExtensionTestDirs
}				

