module ybuilder.core.extensiontest;

import java.util.Properties;
import java.io:FileInputStream, File;

load ybuilder.core.build;
load ybuilder.core.base;

extensionTestDir = path dir.main "etprojects/";
extensionTestTargetDir = path dir.target "etprojects/";

extensionTestDirs = array ([] is list<string>);

createExtensionTestDir name project = (
    baseDir = path extensionTestDir name;
    createNewYetiProject baseDir project;
    antTask "copy" ["todir":baseDir~, "overwrite":"false"] 
        [el "javaresource" ["name":"ybuilder/core/targets.properties"][],
         el "javaresource" ["name":"ybuilder/core/testextension.yeti"][],
         el "mapper" ["type":"flatten"][]] 
        project;
        
);

createExtensionTestDirs = 
    target "createExtensionTestDirs" [] do p:
        for extensionTestDirs do n: 
            createExtensionTestDir n p 
        done;
    done;

runExtensionTests project = (
    if (file (extensionTestDir~))#exists() then
        antTask "copy" ["todir":extensionTestTargetDir~] 
                [el "fileset" ["dir":extensionTestDir~] []] 
                project;

        projectDirs = 
            (fs = (file (extensionTestTargetDir~))#listFiles();
             if nullptr? fs then 
                [] 
             else 
                list (wrapArray fs) 
             fi);
                        
        for projectDirs do dir:
            args = 
               (pf = new File(dir, "targets.properties");
                if pf#isFile() then
                    props = new Properties();
                    fis = new FileInputStream(pf);
                    props#load(fis);
                    r = if props#contains("targets") then 
                        [string props#get("targets")];
                    else 
                        ["test"] 
                    fi;
                    fis#close();
                    r;
                else 
                    ["test"] 
                fi);
            println "-------------\nextension test [\(dir#getName())]";
            println "target: \(args)";
                        
            antTask "java" 
                    ["jar":"ybuilder.jar", "fork":"true", 
                     "dir":dir#getAbsolutePath()] 
                    (map do a: el "arg" ["line":string a] [] done args) 
                    project;
        done;
    fi;    
);

extensionTests = 
    target "extensionTests" [InLivecycle livecycleTargets.test] runExtensionTests;

{
    extensionTests, 
    runExtensionTests, 
    extensionTestDirs,
    extensionTestDir,
    createExtensionTestDir, 
    createExtensionTestDirs
}				

