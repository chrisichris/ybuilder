/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

module ybuilder.core.extensiontest;

import java.util.Properties;
import java.io:FileInputStream, File;

load ybuilder.core.build;
load ybuilder.core.base;

createExtensionTestConfig config = {
    extensionTestDir = "etprojects/",
    extensionTestTargetDir = config.dir.target ^ "etprojects/",
};


createExtensionTestDirs config name project = 
    (baseDir = config.extensionTestDir ^ name ^ "/";
    createNewYetiProject config baseDir project;
    antTask "copy" ["todir":baseDir, "overwrite":"false"] 
        [el "javaresource" ["name":"ybuilder/core/targets.properties"][],
         el "mapper" ["type":"flatten"][]] 
        project);


_doExtensionTest config name project = (
    if (file (config.extensionTestDir ^ name))#exists() then 
        logInfo project "extension-test" name;
        antTask "copy" ["todir":config.extensionTestTargetDir ^ name] 
                [el "fileset" ["dir":config.extensionTestDir ^ name] []] 
                project;
        
        dir = file (config.extensionTestTargetDir ^ name);

        argLines = 
           (fis = new FileInputStream(new File(dir,"targets.properties"));
            try 
                props = new Properties();
                props#load(fis);
                fst = string props#get("targets");
                if defined? (props#get("targets1")) then
                    [fst,(string props#get("targets1"))]
                else
                    [fst]
                fi
            finally
                fis#close();
            yrt);
        for argLines do args:
            logInfo project "extension-test" "running target: \(args)";
                        
            antTask "java" 
                    ["jar":"ybuilder.jar", "fork":"true", 
                     "failonerror":"true",
                     "dir":dir#getAbsolutePath(),
                     "taskname":""] 
                    [el "arg" ["line":args] []] 
                    project;
        done;
    fi;        
);    
  

runExtensionTests config project = (
    if (file config.extensionTestDir)#exists() then
        names = if (length project.args) > 0 then
            list project.args;
        else
            rs = (file config.extensionTestDir)#list();
            if defined? rs then 
                sort (rs as list<string>);
            else
                []
            fi;
        fi;
        for names do n: 
            _doExtensionTest config n (project is projectType); 
        done;
    fi;
);

registerExtensionTestTargets config = 
    (createExtensionTestProject = 
        target config "extensiontest" "createProject" 
               [Description ("creates a project for testing of an extension "
                ^"in [\(config.extensionTestDir)]. The name of the "
                ^" project must be provided as a param")] do p:
            for p.args do n: 
                createExtensionTestDirs config n p 
            done;
        done;

    extensionTest = 
        target config "extensiontest" "run" 
        [Before config.livecycleTargets.test] 
        do p: runExtensionTests config p done;

    push config.targetsInHelp extensionTest;   
    push config.targetsInHelp createExtensionTestProject;
    {
        extenstiontestTargets = {
            createExtensionTestProject,
            extensionTest,
        }
    });


{
    createExtensionTestConfig,
    registerExtensionTestTargets,
    runExtensionTests, 
    createExtensionTestDirs
}				

