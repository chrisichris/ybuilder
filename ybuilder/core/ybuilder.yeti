/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

program ybuilder.core.ybuilder;

import java.lang.Thread;
import java.io:File;
import java.net:URLClassLoader;
import yeti.lang.compiler.yeti;

file n = new File(n is string);
args = list _argv;

buildDependenciesProg = "ybuilder/buildDependencies.yeti"; 

if (file buildDependenciesProg)#exists() 
    and (not (file "ybuilder/extlib_managed")#exists()) then
    yeti#main(array(buildDependenciesProg :: args));
fi;	

if (not empty? args) and ((head args) == "newProject") then
    load ybuilder.core.build;
    load ybuilder.core.base;
    projectName = 
        if not empty? (tail args) then 
            path basedir (head (tail args)) 
        else 
            basedir 
        fi;
    createNewYetiProject projectName (createProject ()); 
    yeti#main(array [buildDependenciesProg]);
elif (not (file "project.yeti")#exists()) then
    println '
ybuilder is a simple build-enviroment for YETI the functional 
programming-language for JVM.

To use ybuilder create a new ybuilder project:

1.) copy the "ybuilder.jar" file to a new directory and 
2.) run "java -jar ybuilder.jar newProject" to create the needed files and 
    directories
3.) edit the "project.yeti" file as described in the comments
4.) run "java -jar ybuilder.jar" again to get a detailed help message

For detailed description google ybuilder yeti (there is no homepage yet)
'

elif (not empty? args) and ((head args) == "cleanBuildLibs") then
    load ybuilder.core.build;
    antTask "delete" ["dir":"ybuilder/extlib_managed"][] (createProject());
elif (not empty? args) and ((head args) == "buildLibs") then
    if (file buildDependenciesProg)#exists() then
        load ybuilder.core.build;
        antTask "delete" ["dir":"ybuilder/extlib_managed"][] (createProject());
        yeti#main(array(buildDependenciesProg :: args));
    else
        failWith "There is no \(buildDependenciesProg) file";
    fi
else
    load ybuilder.core.build;
    import org.apache.tools.ant.AntClassLoader;
    oL = Thread#currentThread()#getContextClassLoader();
    
    flUrl = (classOf AntClassLoader)#getProtectionDomain()
                                    #getCodeSource()#getLocation();
        
    antFiles = 
        (createAntFileSet "."
            [Include "ybuilder/extlib/*.jar", 
             Include "ybuilder/extlib_managed/*.jar"])
        #getDirectoryScanner();
        
    antFiles#scan();
    urls = map do n: (new File(string n))#toURL() done 
               (array antFiles#getIncludedFiles());
//	println ("urls" ^ urls);
    ctxtLoader = if empty? urls then
            oL
        else
    //		println "urls \(urls)";
            import java.lang.ClassLoader;
            new URLClassLoader(array (flUrl::urls),
                               ClassLoader#getSystemClassLoader()#getParent()); 
        fi;
    Thread#currentThread()#setContextClassLoader(ctxtLoader);
    try
        m = ctxtLoader#loadClass("yeti.lang.compiler.yeti")
                      #getMethod("main",array [classOf java.lang.String[]]);
        m#invoke((),
                (array 
                    [(array ("project.yeti" :: args)) as ~String[]]
                ) as ~String[][]);
        //yeti#main(array ("project.yeti" :: args));
    finally 
        Thread#currentThread()#setContextClassLoader(oL);
    yrt;
fi;
        
System#exit(0);
();



