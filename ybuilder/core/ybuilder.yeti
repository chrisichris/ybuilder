/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

program ybuilder.core.ybuilder;

load ybuilder.core.base;

import java.lang.Thread;
import java.io:File;
import java.net:URLClassLoader;
import yeti.lang.compiler.yeti;

file n = new File(n is string);
args = list _argv;

buildDepsFile = dir.ybuilder ^ "buildDependencies.yeti"; 
buildLibsDir = dir.ybuilder ^ "extlib_managed/";

retrieveBuildDependencies () =
   (cLines = readFile "project.yeti" "utf-8" getLines;
    deps = (map do s:
        a = (like '\s*"([^"]+)"\s*"([^"]+)"\s*"([^"]+)"(.*)$' s) ();//"
        if empty? a then 
            failWith "Error in @buildDependency: Arguments wrong: \(s)";
        else
            rs = strTrim (a.[4]);
            if strLength rs == 0 then
                {dep = a, exc = []};
            else
                a2 = (like '\[(.*)\]' rs) ();
                if empty? a2 then
                    failWith "Error in @buildDependency: Arguments wrong: \(s)"
                else
                    exs = a2.[1];
                    exc = matchAll '\s*exclusion\s*"([^"]*)"\s*"([^"]*)"\s*,?\s*' do s: 
                        pair s.[1] s.[2] done
                        \(failWith "Error in @buildDependency: Arguments wrong: \(s)")
                        exs;
                    {dep = a, exc};
                fi
            fi;            
        fi;
    done
    . concatMap do l:
        a = (like '//\s*@buildDependency\s(.*)' l)();
        if empty? a then [] else [a.[1]] fi;
    done) cLines;

    reps = (map do s:
        a = (like '\s*"([^"]+)"\s*"([^"]+)"\s*$' s) (); 
        if empty? a then 
            failWith "Error in @buildRepository: Arguemntes wrong: \(s)";
        else
            a
        fi;
    done
    . concatMap do l:
        a = (like '//\s*@buildRepository\s(.*)' l)();
        if empty? a then [] else [a.[1]] fi;
    done) cLines;
    println "Dependencies";
    for deps println;
    //retrieve the libs
    (load ybuilder.core.build;
    maven str = ("antlib:org.apache.maven.artifact.ant " ^ str);
    project = createProject();
    
    antTask "delete" ["dir":buildLibsDir] [] project;
    antTask "mkdir" ["dir":buildLibsDir] [] project;
    if not empty? deps then
        antTask (maven "dependencies") 
                ["filesetId" : "dependenciesFS", "useScope":"runtime"] 
                ([el (maven "localRepository") 
                     ["layout":"default", 
                      "path":"${user.home}/.m2/repository"] []] 
                 ++ (map do rr: 
                        el (maven "remoteRepository") 
                           ["id":rr.[1], "url":rr.[2],"layout":"default"] 
                           [] 
                     done reps) 
                 ++ (map do d: 
                        el (maven "dependency") 
                           ["groupId" : d.dep.[1],
                            "artifactId" : d.dep.[2],
                            "version" : d.dep.[3],
                            "scope" : "runtime"]
                            (map do exc: 
                                 el (maven "exclusion") 
                                    ["groupId":exc.fst, 
                                     "artifactId":exc.snd] [] 
                                 done d.exc) 
                     done deps)) 
                project;
                    
        antTask "copy" ["todir":buildLibsDir] 
                [el "fileset" ["refid":"dependenciesFS"][],
                 el "mapper" ["type":"flatten"] []] 
                project;
    fi;
    ));
    

if (file "project.yeti")#exists() and not (file buildLibsDir)#exists() then
    retrieveBuildDependencies ();
fi;	

if (not empty? args) and ((head args) == "newProject") then
    load ybuilder.core.build;
    load ybuilder.core.base;
    projectName = 
        if not empty? (tail args) then 
            (head (tail args)) 
        else 
            basedir 
        fi;
    createNewYetiProject projectName (createProject ()); 
    retrieveBuildDependencies ();
elif (not (file "project.yeti")#exists()) then
    println '
ybuilder is a simple build-enviroment for YETI the functional 
programming-language for JVM.

To use ybuilder create a new ybuilder project:

1.) copy the "ybuilder.jar" file to a new directory and 
2.) run "java -jar ybuilder.jar newProject" to create the needed files and 
    directories
3.) edit the "project.yeti" file as described in the comments
4.) run "java -jar ybuilder.jar" again to get a detailed help message

For detailed description google ybuilder yeti (there is no homepage yet)
'

elif (not empty? args) and ((head args) == "cleanBuildLibs") then
    load ybuilder.core.build;
    antTask "delete" ["dir":buildLibsDir][] (createProject());
elif (not empty? args) and ((head args) == "buildLibs") then
    if (file buildDepsFile)#exists() then
        load ybuilder.core.build;
        antTask "delete" ["dir":buildLibsDir][] (createProject());
        retrieveBuildDependencies ();
    else
        failWith "There is no \(buildDepsFile) file";
    fi
else
    load ybuilder.core.build;
    import org.apache.tools.ant.AntClassLoader;
    oL = Thread#currentThread()#getContextClassLoader();
    
    flUrl = (classOf AntClassLoader)#getProtectionDomain()
                                    #getCodeSource()#getLocation();
        
    antFiles = 
        (createAntFileSet "."
            [Include "\(dir.ybuilder)extlib/*.jar", 
             Include "\(buildLibsDir)*.jar"])
        #getDirectoryScanner();
        
    antFiles#scan();
    urls = map do n: (new File(string n))#toURL() done 
               (array antFiles#getIncludedFiles());
//	println ("urls" ^ urls);
    ctxtLoader = if empty? urls then
            oL
        else
    //		println "urls \(urls)";
            import java.lang.ClassLoader;
            new URLClassLoader(array (flUrl::urls),
                               ClassLoader#getSystemClassLoader()#getParent()); 
        fi;
    Thread#currentThread()#setContextClassLoader(ctxtLoader);
    try
        m = ctxtLoader#loadClass("yeti.lang.compiler.yeti")
                      #getMethod("main",array [classOf java.lang.String[]]);
        m#invoke((),
                (array 
                    [(array ("project.yeti" :: args)) as ~String[]]
                ) as ~String[][]);
        //yeti#main(array ("project.yeti" :: args));
    finally 
        Thread#currentThread()#setContextClassLoader(oL);
    yrt;
fi;
        
System#exit(0);
();



