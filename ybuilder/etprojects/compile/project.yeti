//the base module sets up all the targets, pathes etc for a basic yeti build
load ybuilder.core.base;
load ybuilder.core.build;
_ = load ybuilder.core.junit;

//---General setup
//FIXME: change following values to fit your project

project.name := "FIXME: projects-name";
project.groupId :="FIXME: project-groupId";
project.artifactId := "FIXME: project artifactId";
project.version := "FIXME: 0.1-alpha";
project.description := "FIXME: project description";


//---Library Dependencies ---			
// add your library dependencies in maven style
// use: dependency "groupId" "artifactId" "version" [options]
//      options = ProvidedScope(), TestScope(), SystemScope()
//      default scope is compile scope

dependency "org.apache.commons" "commons-lang3" "3.0.1" [];
dependency "junit" "junit" "3.8.2" [TestScope()];
// dependency "javax.servlet" "servlet-api" "2.4" [ProvidedScope()];

//---custom targets --

// add custom targets here
// a (stupid) example:
_ = 
   target "extTest" [] 
          do p:
            println "--tesing";
            assert "java-file" (file (dir.targetClasses || "foo/JavaFoo.class"))#exists();
            assert "yeti-file" (file (dir.targetClasses || "foo.class"))#exists();
            assert "yeti-file2" (file (dir.targetClasses || "mfoo/foo2.class"))#exists();
            assert "yeit-test-file" (file (dir.targetTestClasses || "testfoo.class"))#exists();
            assert "java-test-file" (file (dir.targetTestClasses || "foo/JavaTestFoo.class"))#exists();
          done;


//---End--

// leave the final load! 
// runs the targets entered at the command line
load ybuilder.core.run;